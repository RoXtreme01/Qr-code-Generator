import tkinter as tk
from PIL import Image, ImageTk
from tkinter import messagebox
import qrcode
import os

root = tk.Tk()
root.geometry("1500x750")
root.resizable(False, False)
root.title("QR Code Generator")

# Variable to store the QR code image reference
qr_image = None

def submit():
    global qr_image  # Ensure we keep a reference to avoid garbage collection
    url = url_entry.get()
    file_name = file_entry.get() + ".png"
    if url and file_name:
        qr = qrcode.QRCode(
            version=1,  # Controls the size of the QR code
            error_correction=qrcode.constants.ERROR_CORRECT_L,
            box_size=10,  # Controls the size of each box in the QR code grid
            border=4,  # Controls the thickness of the border
        )

        # Add the URL to the QR code
        qr.add_data(url)
        qr.make(fit=True)

        # Create an image from the QR code instance
        img = qr.make_image(fill_color="black", back_color="white")

        # Save the image to a file
        img.save(file_name)

        # Open and resize the saved QR code image for display
        qrs = Image.open(file_name).resize((200, 200))
        qr_image = ImageTk.PhotoImage(qrs)

        # Display the QR code on the screen
        label_view = tk.Label(root, image=qr_image)
        label_view.place(x=1050, y=300)
        
        messagebox.showinfo("Success", f"QR Code saved as {file_name}")
    else:
        messagebox.showwarning("Input Error", "Please fill both fields.")

def clear():
    if url_entry != "":
        url_entry.delete(0,"end")
    if file_entry != "":
        file_entry.delete(0,"end")
    

def inform():
    messagebox.showinfo("Information", "This is the name of the file to save the QR code.")

def dsave():
    try:
        file_name = file_entry.get() + ".png"

        os.remove(file_name)
    except FileNotFoundError:
        massagebox.showerror("Error","First Create a QR code")
    except Exception as e:
        messagebox.showerror("Error", f"An unexpected error occurred: {str(e)}")
        
    

# Background Image
Qrbg = Image.open(r"C:\Users\rohit\Downloads\QRbg.jpeg")
resized = Qrbg.resize((1500, 750))
final_qrbg = ImageTk.PhotoImage(resized)

labelbg = tk.Label(root, image=final_qrbg, bd=0)
labelbg.pack()

# URL Label
label_url = tk.Label(root, text="Enter URL:", bg="black", fg="white", font="Arial 16 bold")
label_url.place(x=150, y=320)

# URL Entry
url_entry = tk.Entry(root, width=30, font="Arial 15")
url_entry.place(x=170, y=360)

# File Name Label
label_file = tk.Label(root, text="Enter File Name:", bg="black", fg="white", font="Arial 16 bold")
label_file.place(x=150, y=420)

# File Name Entry
file_entry = tk.Entry(root, width=30, font="Arial 15")
file_entry.place(x=170, y=460)

# Submit Button
submit_img = Image.open(r"C:\Users\rohit\Downloads\submit2.jpeg")
resized_submit = submit_img.resize((130, 40))
final_submit = ImageTk.PhotoImage(resized_submit)

submit_button = tk.Button(root, image=final_submit, bd=0, command=submit)
submit_button.place(x=155, y=575)

# Clear Button
clear_img = Image.open(r"C:\Users\rohit\Downloads\clear.jpeg")
resized_clear = clear_img.resize((130, 40))
final_clear = ImageTk.PhotoImage(resized_clear)

clear_button = tk.Button(root, image=final_clear, bd=0,command=clear)
clear_button.place(x=365, y=575)

# Don't Save Button
dsave_img = Image.open(r"C:\Users\rohit\Downloads\don'tsave.jpeg")
resized_dsave = dsave_img.resize((150, 40))
final_dsave = ImageTk.PhotoImage(resized_dsave)

dsave_button = tk.Button(root, image=final_dsave, bd=0,command=dsave)
dsave_button.place(x=1080, y=565)

# Info Button for File Name Label and Entry
info_img = Image.open(r"C:\Users\rohit\Downloads\infoicon.jpg")
resized_info = info_img.resize((20, 20))
final_info = ImageTk.PhotoImage(resized_info)

info_button = tk.Button(root, image=final_info, bg="black", bd=0, command=inform)
info_button.place(x=330, y=425)

# Final Loop of the program
root.mainloop()
